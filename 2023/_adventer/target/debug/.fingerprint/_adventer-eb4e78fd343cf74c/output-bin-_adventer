{"message":"a `const` item should never be interior mutable","code":{"code":"clippy::declare_interior_mutable_const","explanation":null},"level":"warning","spans":[{"file_name":"src/resource.rs","byte_start":284,"byte_end":289,"line_start":16,"line_end":16,"column_start":1,"column_end":6,"is_primary":false,"text":[{"text":"const SECRETS: OnceCell<Secrets> = OnceCell::new();","highlight_start":1,"highlight_end":6}],"label":"make this a static item (maybe with lazy_static)","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/resource.rs","byte_start":284,"byte_end":335,"line_start":16,"line_end":16,"column_start":1,"column_end":52,"is_primary":true,"text":[{"text":"const SECRETS: OnceCell<Secrets> = OnceCell::new();","highlight_start":1,"highlight_end":52}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`#[warn(clippy::declare_interior_mutable_const)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: a `const` item should never be interior mutable\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/resource.rs:16:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mconst SECRETS: OnceCell<Secrets> = OnceCell::new();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----\u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mmake this a static item (maybe with lazy_static)\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(clippy::declare_interior_mutable_const)]` on by default\u001b[0m\n\n"}
{"message":"match expression looks like `matches!` macro","code":{"code":"clippy::match_like_matches_macro","explanation":null},"level":"warning","spans":[{"file_name":"src/resource.rs","byte_start":2438,"byte_end":2544,"line_start":91,"line_end":94,"column_start":18,"column_end":10,"is_primary":true,"text":[{"text":"        |result| match result {","highlight_start":18,"highlight_end":32},{"text":"            Err(FindOutputError::NoOutputYet(_)) => false,","highlight_start":1,"highlight_end":59},{"text":"            _ => true,","highlight_start":1,"highlight_end":23},{"text":"        },","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_like_matches_macro","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`#[warn(clippy::match_like_matches_macro)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"try this","code":null,"level":"help","spans":[{"file_name":"src/resource.rs","byte_start":2438,"byte_end":2544,"line_start":91,"line_end":94,"column_start":18,"column_end":10,"is_primary":true,"text":[{"text":"        |result| match result {","highlight_start":18,"highlight_end":32},{"text":"            Err(FindOutputError::NoOutputYet(_)) => false,","highlight_start":1,"highlight_end":59},{"text":"            _ => true,","highlight_start":1,"highlight_end":23},{"text":"        },","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":"!matches!(result, Err(FindOutputError::NoOutputYet(_)))","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: match expression looks like `matches!` macro\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/resource.rs:91:18\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m91\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        |result| match result {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m__________________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m92\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Err(FindOutputError::NoOutputYet(_)) => false,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m93\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            _ => true,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m94\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        },\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: try this: `!matches!(result, Err(FindOutputError::NoOutputYet(_)))`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_like_matches_macro\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(clippy::match_like_matches_macro)]` on by default\u001b[0m\n\n"}
{"message":"match expression looks like `matches!` macro","code":{"code":"clippy::match_like_matches_macro","explanation":null},"level":"warning","spans":[{"file_name":"src/resource.rs","byte_start":2794,"byte_end":2917,"line_start":103,"line_end":106,"column_start":18,"column_end":10,"is_primary":true,"text":[{"text":"        |result| match result {","highlight_start":18,"highlight_end":32},{"text":"            Err(FindExampleError::IndexTooHigh(ProblemPart::One)) => false,","highlight_start":1,"highlight_end":76},{"text":"            _ => true,","highlight_start":1,"highlight_end":23},{"text":"        },","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_like_matches_macro","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"try this","code":null,"level":"help","spans":[{"file_name":"src/resource.rs","byte_start":2794,"byte_end":2917,"line_start":103,"line_end":106,"column_start":18,"column_end":10,"is_primary":true,"text":[{"text":"        |result| match result {","highlight_start":18,"highlight_end":32},{"text":"            Err(FindExampleError::IndexTooHigh(ProblemPart::One)) => false,","highlight_start":1,"highlight_end":76},{"text":"            _ => true,","highlight_start":1,"highlight_end":23},{"text":"        },","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":"!matches!(result, Err(FindExampleError::IndexTooHigh(ProblemPart::One)))","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: match expression looks like `matches!` macro\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/resource.rs:103:18\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m103\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        |result| match result {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m__________________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m104\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Err(FindExampleError::IndexTooHigh(ProblemPart::One)) => false,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            _ => true,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m106\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        },\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: try this: `!matches!(result, Err(FindExampleError::IndexTooHigh(ProblemPart::One)))`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_like_matches_macro\u001b[0m\n\n"}
{"message":"match expression looks like `matches!` macro","code":{"code":"clippy::match_like_matches_macro","explanation":null},"level":"warning","spans":[{"file_name":"src/resource.rs","byte_start":3169,"byte_end":3292,"line_start":115,"line_end":118,"column_start":18,"column_end":10,"is_primary":true,"text":[{"text":"        |result| match result {","highlight_start":18,"highlight_end":32},{"text":"            Err(FindExampleError::IndexTooHigh(ProblemPart::One)) => false,","highlight_start":1,"highlight_end":76},{"text":"            _ => true,","highlight_start":1,"highlight_end":23},{"text":"        },","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_like_matches_macro","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"try this","code":null,"level":"help","spans":[{"file_name":"src/resource.rs","byte_start":3169,"byte_end":3292,"line_start":115,"line_end":118,"column_start":18,"column_end":10,"is_primary":true,"text":[{"text":"        |result| match result {","highlight_start":18,"highlight_end":32},{"text":"            Err(FindExampleError::IndexTooHigh(ProblemPart::One)) => false,","highlight_start":1,"highlight_end":76},{"text":"            _ => true,","highlight_start":1,"highlight_end":23},{"text":"        },","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":"!matches!(result, Err(FindExampleError::IndexTooHigh(ProblemPart::One)))","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: match expression looks like `matches!` macro\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/resource.rs:115:18\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m115\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        |result| match result {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m__________________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m116\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Err(FindExampleError::IndexTooHigh(ProblemPart::One)) => false,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m117\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            _ => true,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m118\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        },\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: try this: `!matches!(result, Err(FindExampleError::IndexTooHigh(ProblemPart::One)))`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_like_matches_macro\u001b[0m\n\n"}
{"message":"single-character string constant used as pattern","code":{"code":"clippy::single_char_pattern","explanation":null},"level":"warning","spans":[{"file_name":"src/resource.rs","byte_start":5525,"byte_end":5528,"line_start":174,"line_end":174,"column_start":41,"column_end":44,"is_primary":true,"text":[{"text":"            && formatted_text.ends_with(\":\")","highlight_start":41,"highlight_end":44}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`#[warn(clippy::single_char_pattern)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"try using a `char` instead","code":null,"level":"help","spans":[{"file_name":"src/resource.rs","byte_start":5525,"byte_end":5528,"line_start":174,"line_end":174,"column_start":41,"column_end":44,"is_primary":true,"text":[{"text":"            && formatted_text.ends_with(\":\")","highlight_start":41,"highlight_end":44}],"label":null,"suggested_replacement":"':'","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: single-character string constant used as pattern\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/resource.rs:174:41\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m174\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            && formatted_text.ends_with(\":\")\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: try using a `char` instead: `':'`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(clippy::single_char_pattern)]` on by default\u001b[0m\n\n"}
{"message":"redundant clone","code":{"code":"clippy::redundant_clone","explanation":null},"level":"warning","spans":[{"file_name":"src/resource.rs","byte_start":5574,"byte_end":5586,"line_start":176,"line_end":176,"column_start":38,"column_end":50,"is_primary":true,"text":[{"text":"    .map(|(_, el)| el.text().join(\"\").to_string()) else { return Err(FindExampleError::NoExampleElementInArticle)};","highlight_start":38,"highlight_end":50}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this value is dropped without further use","code":null,"level":"note","spans":[{"file_name":"src/resource.rs","byte_start":5556,"byte_end":5574,"line_start":176,"line_end":176,"column_start":20,"column_end":38,"is_primary":true,"text":[{"text":"    .map(|(_, el)| el.text().join(\"\").to_string()) else { return Err(FindExampleError::NoExampleElementInArticle)};","highlight_start":20,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_clone","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`#[warn(clippy::redundant_clone)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove this","code":null,"level":"help","spans":[{"file_name":"src/resource.rs","byte_start":5574,"byte_end":5586,"line_start":176,"line_end":176,"column_start":38,"column_end":50,"is_primary":true,"text":[{"text":"    .map(|(_, el)| el.text().join(\"\").to_string()) else { return Err(FindExampleError::NoExampleElementInArticle)};","highlight_start":38,"highlight_end":50}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: redundant clone\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/resource.rs:176:38\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m176\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    .map(|(_, el)| el.text().join(\"\").to_string()) else { return Err(FindExampleError::NoExampleElementInArticle)};\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: remove this\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: this value is dropped without further use\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/resource.rs:176:20\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m176\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    .map(|(_, el)| el.text().join(\"\").to_string()) else { return Err(FindExampleError::NoExampleElementInArticle)};\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_clone\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(clippy::redundant_clone)]` on by default\u001b[0m\n\n"}
{"message":"a `const` item with interior mutability should not be borrowed","code":{"code":"clippy::borrow_interior_mutable_const","explanation":null},"level":"warning","spans":[{"file_name":"src/resource.rs","byte_start":9015,"byte_end":9022,"line_start":269,"line_end":269,"column_start":40,"column_end":47,"is_primary":true,"text":[{"text":"    let client = http_client(&secrets(&SECRETS).session, \"text/html\")?;","highlight_start":40,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"assign this const to a local or static variable, and use the variable here","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#borrow_interior_mutable_const","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`#[warn(clippy::borrow_interior_mutable_const)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: a `const` item with interior mutability should not be borrowed\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/resource.rs:269:40\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m269\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let client = http_client(&secrets(&SECRETS).session, \"text/html\")?;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: assign this const to a local or static variable, and use the variable here\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#borrow_interior_mutable_const\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(clippy::borrow_interior_mutable_const)]` on by default\u001b[0m\n\n"}
{"message":"useless use of `format!`","code":{"code":"clippy::useless_format","explanation":null},"level":"warning","spans":[{"file_name":"src/resource.rs","byte_start":9736,"byte_end":9759,"line_start":290,"line_end":290,"column_start":22,"column_end":45,"is_primary":true,"text":[{"text":"    let user_agent = format!(\"adventer 1.0\");","highlight_start":22,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`#[warn(clippy::useless_format)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider using `.to_string()`","code":null,"level":"help","spans":[{"file_name":"src/resource.rs","byte_start":9736,"byte_end":9759,"line_start":290,"line_end":290,"column_start":22,"column_end":45,"is_primary":true,"text":[{"text":"    let user_agent = format!(\"adventer 1.0\");","highlight_start":22,"highlight_end":45}],"label":null,"suggested_replacement":"\"adventer 1.0\".to_string()","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: useless use of `format!`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/resource.rs:290:22\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m290\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let user_agent = format!(\"adventer 1.0\");\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: consider using `.to_string()`: `\"adventer 1.0\".to_string()`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(clippy::useless_format)]` on by default\u001b[0m\n\n"}
{"message":"a `const` item with interior mutability should not be borrowed","code":{"code":"clippy::borrow_interior_mutable_const","explanation":null},"level":"warning","spans":[{"file_name":"src/resource.rs","byte_start":11229,"byte_end":11236,"line_start":334,"line_end":334,"column_start":42,"column_end":49,"is_primary":true,"text":[{"text":"    let response = http_client(&secrets(&SECRETS).session, content_type)?","highlight_start":42,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"assign this const to a local or static variable, and use the variable here","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#borrow_interior_mutable_const","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: a `const` item with interior mutability should not be borrowed\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/resource.rs:334:42\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m334\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let response = http_client(&secrets(&SECRETS).session, content_type)?\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: assign this const to a local or static variable, and use the variable here\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#borrow_interior_mutable_const\u001b[0m\n\n"}
{"message":"the borrowed expression implements the required traits","code":{"code":"clippy::needless_borrow","explanation":null},"level":"warning","spans":[{"file_name":"src/update.rs","byte_start":422,"byte_end":433,"line_start":17,"line_end":17,"column_start":32,"column_end":43,"is_primary":true,"text":[{"text":"    self_replace::self_replace(&new_binary)?;","highlight_start":32,"highlight_end":43}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`#[warn(clippy::needless_borrow)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"change this to","code":null,"level":"help","spans":[{"file_name":"src/update.rs","byte_start":422,"byte_end":433,"line_start":17,"line_end":17,"column_start":32,"column_end":43,"is_primary":true,"text":[{"text":"    self_replace::self_replace(&new_binary)?;","highlight_start":32,"highlight_end":43}],"label":null,"suggested_replacement":"new_binary","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: the borrowed expression implements the required traits\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/update.rs:17:32\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    self_replace::self_replace(&new_binary)?;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: change this to: `new_binary`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(clippy::needless_borrow)]` on by default\u001b[0m\n\n"}
{"message":"called `map(..).flatten()` on `Option`","code":{"code":"clippy::map_flatten","explanation":null},"level":"warning","spans":[{"file_name":"src/run.rs","byte_start":865,"byte_end":917,"line_start":24,"line_end":25,"column_start":18,"column_end":27,"is_primary":true,"text":[{"text":"                .map(|name| name.to_str())","highlight_start":18,"highlight_end":43},{"text":"                .flatten()","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#map_flatten","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`#[warn(clippy::map_flatten)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"try replacing `map` with `and_then` and remove the `.flatten()`","code":null,"level":"help","spans":[{"file_name":"src/run.rs","byte_start":865,"byte_end":917,"line_start":24,"line_end":25,"column_start":18,"column_end":27,"is_primary":true,"text":[{"text":"                .map(|name| name.to_str())","highlight_start":18,"highlight_end":43},{"text":"                .flatten()","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":"and_then(|name| name.to_str())","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: called `map(..).flatten()` on `Option`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/run.rs:24:18\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m24\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                .map(|name| name.to_str())\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m__________________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                .flatten()\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|__________________________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: try replacing `map` with `and_then` and remove the `.flatten()`: `and_then(|name| name.to_str())`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#map_flatten\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(clippy::map_flatten)]` on by default\u001b[0m\n\n"}
{"message":"redundant clone","code":{"code":"clippy::redundant_clone","explanation":null},"level":"warning","spans":[{"file_name":"src/run.rs","byte_start":4915,"byte_end":4923,"line_start":137,"line_end":137,"column_start":37,"column_end":45,"is_primary":true,"text":[{"text":"                        error(answer.clone())","highlight_start":37,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this value is dropped without further use","code":null,"level":"note","spans":[{"file_name":"src/run.rs","byte_start":4909,"byte_end":4915,"line_start":137,"line_end":137,"column_start":31,"column_end":37,"is_primary":true,"text":[{"text":"                        error(answer.clone())","highlight_start":31,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_clone","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"remove this","code":null,"level":"help","spans":[{"file_name":"src/run.rs","byte_start":4915,"byte_end":4923,"line_start":137,"line_end":137,"column_start":37,"column_end":45,"is_primary":true,"text":[{"text":"                        error(answer.clone())","highlight_start":37,"highlight_end":45}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: redundant clone\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/run.rs:137:37\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m137\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        error(answer.clone())\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: remove this\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: this value is dropped without further use\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/run.rs:137:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m137\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        error(answer.clone())\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_clone\u001b[0m\n\n"}
{"message":"this function has too many arguments (8/7)","code":{"code":"clippy::too_many_arguments","explanation":null},"level":"warning","spans":[{"file_name":"src/run.rs","byte_start":5107,"byte_end":5365,"line_start":150,"line_end":159,"column_start":1,"column_end":28,"is_primary":true,"text":[{"text":"pub fn run_and_check(","highlight_start":1,"highlight_end":22},{"text":"    section: String,","highlight_start":1,"highlight_end":21},{"text":"    name: &Problem,","highlight_start":1,"highlight_end":20},{"text":"    lang: &Language,","highlight_start":1,"highlight_end":21},{"text":"    check: bool,","highlight_start":1,"highlight_end":17},{"text":"    get_input: impl FnOnce() -> Result<String>,","highlight_start":1,"highlight_end":48},{"text":"    get_output: impl FnOnce() -> Result<String>,","highlight_start":1,"highlight_end":49},{"text":"    code: &str,","highlight_start":1,"highlight_end":16},{"text":"    quiet: bool,","highlight_start":1,"highlight_end":17},{"text":") -> Result<(bool, String)> {","highlight_start":1,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`#[warn(clippy::too_many_arguments)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: this function has too many arguments (8/7)\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/run.rs:150:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m150\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn run_and_check(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m151\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    section: String,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m152\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    name: &Problem,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m153\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    lang: &Language,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m158\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    quiet: bool,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m159\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m) -> Result<(bool, String)> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|___________________________^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(clippy::too_many_arguments)]` on by default\u001b[0m\n\n"}
{"message":"single-character string constant used as pattern","code":{"code":"clippy::single_char_pattern","explanation":null},"level":"warning","spans":[{"file_name":"src/run.rs","byte_start":6378,"byte_end":6382,"line_start":197,"line_end":197,"column_start":16,"column_end":20,"is_primary":true,"text":[{"text":"        .split(\"\\n\")","highlight_start":16,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"try using a `char` instead","code":null,"level":"help","spans":[{"file_name":"src/run.rs","byte_start":6378,"byte_end":6382,"line_start":197,"line_end":197,"column_start":16,"column_end":20,"is_primary":true,"text":[{"text":"        .split(\"\\n\")","highlight_start":16,"highlight_end":20}],"label":null,"suggested_replacement":"'\\n'","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: single-character string constant used as pattern\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/run.rs:197:16\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m197\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        .split(\"\\n\")\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: try using a `char` instead: `'\\n'`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern\u001b[0m\n\n"}
{"message":"using `clone` on a double-reference; this will copy the reference of type `&str` instead of cloning the inner type","code":{"code":"clippy::clone_double_ref","explanation":null},"level":"error","spans":[{"file_name":"src/run.rs","byte_start":6339,"byte_end":6362,"line_start":195,"line_end":196,"column_start":5,"column_end":17,"is_primary":true,"text":[{"text":"    output","highlight_start":5,"highlight_end":11},{"text":"        .clone()","highlight_start":1,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_double_ref","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`#[deny(clippy::clone_double_ref)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"try dereferencing it","code":null,"level":"help","spans":[{"file_name":"src/run.rs","byte_start":6339,"byte_end":6362,"line_start":195,"line_end":196,"column_start":5,"column_end":17,"is_primary":true,"text":[{"text":"    output","highlight_start":5,"highlight_end":11},{"text":"        .clone()","highlight_start":1,"highlight_end":17}],"label":null,"suggested_replacement":"&(*output).clone()","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"or try being explicit if you are sure, that you want to clone a reference","code":null,"level":"help","spans":[{"file_name":"src/run.rs","byte_start":6339,"byte_end":6362,"line_start":195,"line_end":196,"column_start":5,"column_end":17,"is_primary":true,"text":[{"text":"    output","highlight_start":5,"highlight_end":11},{"text":"        .clone()","highlight_start":1,"highlight_end":17}],"label":null,"suggested_replacement":"<&str>::clone(output)","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: using `clone` on a double-reference; this will copy the reference of type `&str` instead of cloning the inner type\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/run.rs:195:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m195\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    output\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m196\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        .clone()\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|________________^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_double_ref\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[deny(clippy::clone_double_ref)]` on by default\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: try dereferencing it\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m195\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10m&(*output).clone()\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: or try being explicit if you are sure, that you want to clone a reference\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m195\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10m<&str>::clone(output)\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"message":"this expression creates a reference which is immediately dereferenced by the compiler","code":{"code":"clippy::needless_borrow","explanation":null},"level":"warning","spans":[{"file_name":"src/language.rs","byte_start":903,"byte_end":909,"line_start":36,"line_end":36,"column_start":45,"column_end":51,"is_primary":true,"text":[{"text":"                create_input_file(\"./rust\", &input)?;","highlight_start":45,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"change this to","code":null,"level":"help","spans":[{"file_name":"src/language.rs","byte_start":903,"byte_end":909,"line_start":36,"line_end":36,"column_start":45,"column_end":51,"is_primary":true,"text":[{"text":"                create_input_file(\"./rust\", &input)?;","highlight_start":45,"highlight_end":51}],"label":null,"suggested_replacement":"input","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: this expression creates a reference which is immediately dereferenced by the compiler\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/language.rs:36:45\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m36\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                create_input_file(\"./rust\", &input)?;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: change this to: `input`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\u001b[0m\n\n"}
{"message":"this expression creates a reference which is immediately dereferenced by the compiler","code":{"code":"clippy::needless_borrow","explanation":null},"level":"warning","spans":[{"file_name":"src/language.rs","byte_start":1260,"byte_end":1266,"line_start":47,"line_end":47,"column_start":47,"column_end":53,"is_primary":true,"text":[{"text":"                create_input_file(\"./python\", &input)?;","highlight_start":47,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"change this to","code":null,"level":"help","spans":[{"file_name":"src/language.rs","byte_start":1260,"byte_end":1266,"line_start":47,"line_end":47,"column_start":47,"column_end":53,"is_primary":true,"text":[{"text":"                create_input_file(\"./python\", &input)?;","highlight_start":47,"highlight_end":53}],"label":null,"suggested_replacement":"input","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: this expression creates a reference which is immediately dereferenced by the compiler\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/language.rs:47:47\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m47\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                create_input_file(\"./python\", &input)?;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: change this to: `input`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\u001b[0m\n\n"}
{"message":"method `from_str` can be confused for the standard trait method `std::str::FromStr::from_str`","code":{"code":"clippy::should_implement_trait","explanation":null},"level":"warning","spans":[{"file_name":"src/problem.rs","byte_start":1035,"byte_end":1208,"line_start":44,"line_end":49,"column_start":5,"column_end":6,"is_primary":true,"text":[{"text":"    pub fn from_str(name: &str) -> Result<Self> {","highlight_start":5,"highlight_end":50},{"text":"        Ok(Self(","highlight_start":1,"highlight_end":17},{"text":"            name.parse()","highlight_start":1,"highlight_end":25},{"text":"                .context(format!(\"invalid problem day: {}\", name))?,","highlight_start":1,"highlight_end":69},{"text":"        ))","highlight_start":1,"highlight_end":11},{"text":"    }","highlight_start":1,"highlight_end":6}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider implementing the trait `std::str::FromStr` or choosing a less ambiguous method name","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#should_implement_trait","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`#[warn(clippy::should_implement_trait)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `from_str` can be confused for the standard trait method `std::str::FromStr::from_str`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/problem.rs:44:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m44\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn from_str(name: &str) -> Result<Self> {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m45\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        Ok(Self(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m46\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            name.parse()\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m47\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                .context(format!(\"invalid problem day: {}\", name))?,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m48\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        ))\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m49\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_____^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider implementing the trait `std::str::FromStr` or choosing a less ambiguous method name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#should_implement_trait\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(clippy::should_implement_trait)]` on by default\u001b[0m\n\n"}
{"message":"method `from_str` can be confused for the standard trait method `std::str::FromStr::from_str`","code":{"code":"clippy::should_implement_trait","explanation":null},"level":"warning","spans":[{"file_name":"src/problem.rs","byte_start":1846,"byte_end":2296,"line_start":80,"line_end":92,"column_start":5,"column_end":6,"is_primary":true,"text":[{"text":"    pub fn from_str(name: &str) -> Result<Self> {","highlight_start":5,"highlight_end":50},{"text":"        let (day, part) = name","highlight_start":1,"highlight_end":31},{"text":"            .split_once(\".\")","highlight_start":1,"highlight_end":29},{"text":"            .context(format!(\"invalid problem name: {}\", name))?;","highlight_start":1,"highlight_end":66},{"text":"        Ok(Self {","highlight_start":1,"highlight_end":18},{"text":"            day: ProblemDay::from_str(day)?,","highlight_start":1,"highlight_end":45},{"text":"            part: match part {","highlight_start":1,"highlight_end":31},{"text":"                \"0\" => ProblemPart::Zero,","highlight_start":1,"highlight_end":42},{"text":"                \"1\" => ProblemPart::One,","highlight_start":1,"highlight_end":41},{"text":"                _ => anyhow::bail!(\"invalid problem part: {}\", part),","highlight_start":1,"highlight_end":70},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"        })","highlight_start":1,"highlight_end":11},{"text":"    }","highlight_start":1,"highlight_end":6}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider implementing the trait `std::str::FromStr` or choosing a less ambiguous method name","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#should_implement_trait","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `from_str` can be confused for the standard trait method `std::str::FromStr::from_str`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/problem.rs:80:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m80\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn from_str(name: &str) -> Result<Self> {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m81\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let (day, part) = name\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m82\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .split_once(\".\")\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m83\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .context(format!(\"invalid problem name: {}\", name))?;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m91\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        })\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m92\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_____^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider implementing the trait `std::str::FromStr` or choosing a less ambiguous method name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#should_implement_trait\u001b[0m\n\n"}
{"message":"single-character string constant used as pattern","code":{"code":"clippy::single_char_pattern","explanation":null},"level":"warning","spans":[{"file_name":"src/problem.rs","byte_start":1947,"byte_end":1950,"line_start":82,"line_end":82,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"            .split_once(\".\")","highlight_start":25,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"try using a `char` instead","code":null,"level":"help","spans":[{"file_name":"src/problem.rs","byte_start":1947,"byte_end":1950,"line_start":82,"line_end":82,"column_start":25,"column_end":28,"is_primary":true,"text":[{"text":"            .split_once(\".\")","highlight_start":25,"highlight_end":28}],"label":null,"suggested_replacement":"'.'","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: single-character string constant used as pattern\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/problem.rs:82:25\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m82\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .split_once(\".\")\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: try using a `char` instead: `'.'`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern\u001b[0m\n\n"}
{"message":"type `problem::Problem` implements inherent method `to_string(&self) -> String` which shadows the implementation of `Display`","code":{"code":"clippy::inherent_to_string_shadow_display","explanation":null},"level":"error","spans":[{"file_name":"src/problem.rs","byte_start":2301,"byte_end":2388,"line_start":93,"line_end":95,"column_start":5,"column_end":6,"is_primary":true,"text":[{"text":"    pub fn to_string(&self) -> String {","highlight_start":5,"highlight_end":40},{"text":"        format!(\"{}.{}\", self.day, self.part)","highlight_start":1,"highlight_end":46},{"text":"    }","highlight_start":1,"highlight_end":6}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the inherent method from type `problem::Problem`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inherent_to_string_shadow_display","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`#[deny(clippy::inherent_to_string_shadow_display)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: type `problem::Problem` implements inherent method `to_string(&self) -> String` which shadows the implementation of `Display`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/problem.rs:93:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m93\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn to_string(&self) -> String {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m94\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        format!(\"{}.{}\", self.day, self.part)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m95\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_____^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: remove the inherent method from type `problem::Problem`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inherent_to_string_shadow_display\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[deny(clippy::inherent_to_string_shadow_display)]` on by default\u001b[0m\n\n"}
{"message":"an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true","code":{"code":"clippy::from_over_into","explanation":null},"level":"warning","spans":[{"file_name":"src/problem.rs","byte_start":2392,"byte_end":2421,"line_start":98,"line_end":98,"column_start":1,"column_end":30,"is_primary":true,"text":[{"text":"impl Into<String> for Problem {","highlight_start":1,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`impl From<Local> for Foreign` is allowed by the orphan rules, for more information see\nhttps://doc.rust-lang.org/reference/items/implementations.html#trait-implementation-coherence","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`#[warn(clippy::from_over_into)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"replace the `Into` implentation with `From<problem::Problem>`","code":null,"level":"help","spans":[{"file_name":"src/problem.rs","byte_start":2397,"byte_end":2401,"line_start":98,"line_end":98,"column_start":6,"column_end":10,"is_primary":true,"text":[{"text":"impl Into<String> for Problem {","highlight_start":6,"highlight_end":10}],"label":null,"suggested_replacement":"From","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/problem.rs","byte_start":2402,"byte_end":2408,"line_start":98,"line_end":98,"column_start":11,"column_end":17,"is_primary":true,"text":[{"text":"impl Into<String> for Problem {","highlight_start":11,"highlight_end":17}],"label":null,"suggested_replacement":"Problem","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/problem.rs","byte_start":2414,"byte_end":2421,"line_start":98,"line_end":98,"column_start":23,"column_end":30,"is_primary":true,"text":[{"text":"impl Into<String> for Problem {","highlight_start":23,"highlight_end":30}],"label":null,"suggested_replacement":"String","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/problem.rs","byte_start":2431,"byte_end":2435,"line_start":99,"line_end":99,"column_start":8,"column_end":12,"is_primary":true,"text":[{"text":"    fn into(self) -> String {","highlight_start":8,"highlight_end":12}],"label":null,"suggested_replacement":"from","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/problem.rs","byte_start":2436,"byte_end":2440,"line_start":99,"line_end":99,"column_start":13,"column_end":17,"is_primary":true,"text":[{"text":"    fn into(self) -> String {","highlight_start":13,"highlight_end":17}],"label":null,"suggested_replacement":"val: Problem","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/problem.rs","byte_start":2445,"byte_end":2451,"line_start":99,"line_end":99,"column_start":22,"column_end":28,"is_primary":true,"text":[{"text":"    fn into(self) -> String {","highlight_start":22,"highlight_end":28}],"label":null,"suggested_replacement":"Self","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/problem.rs","byte_start":2462,"byte_end":2466,"line_start":100,"line_end":100,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"        self.to_string()","highlight_start":9,"highlight_end":13}],"label":null,"suggested_replacement":"val","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/problem.rs:98:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m98\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl Into<String> for Problem {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: `impl From<Local> for Foreign` is allowed by the orphan rules, for more information see\u001b[0m\n\u001b[0m           https://doc.rust-lang.org/reference/items/implementations.html#trait-implementation-coherence\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(clippy::from_over_into)]` on by default\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: replace the `Into` implentation with `From<problem::Problem>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m98\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0mimpl \u001b[0m\u001b[0m\u001b[38;5;10mFrom\u001b[0m\u001b[0m<\u001b[0m\u001b[0m\u001b[38;5;10mProblem\u001b[0m\u001b[0m> for \u001b[0m\u001b[0m\u001b[38;5;10mString\u001b[0m\u001b[0m {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m99\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0m    fn \u001b[0m\u001b[0m\u001b[38;5;10mfrom\u001b[0m\u001b[0m(\u001b[0m\u001b[0m\u001b[38;5;10mval: Problem\u001b[0m\u001b[0m) -> \u001b[0m\u001b[0m\u001b[38;5;10mSelf\u001b[0m\u001b[0m {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m100\u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[38;5;10mval\u001b[0m\u001b[0m.to_string()\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"message":"single-character string constant used as pattern","code":{"code":"clippy::single_char_pattern","explanation":null},"level":"warning","spans":[{"file_name":"src/problem.rs","byte_start":2773,"byte_end":2776,"line_start":112,"line_end":112,"column_start":31,"column_end":34,"is_primary":true,"text":[{"text":"        if name_list.contains(\".\") {","highlight_start":31,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"try using a `char` instead","code":null,"level":"help","spans":[{"file_name":"src/problem.rs","byte_start":2773,"byte_end":2776,"line_start":112,"line_end":112,"column_start":31,"column_end":34,"is_primary":true,"text":[{"text":"        if name_list.contains(\".\") {","highlight_start":31,"highlight_end":34}],"label":null,"suggested_replacement":"'.'","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: single-character string constant used as pattern\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/problem.rs:112:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m112\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if name_list.contains(\".\") {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: try using a `char` instead: `'.'`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern\u001b[0m\n\n"}
{"message":"single-character string constant used as pattern","code":{"code":"clippy::single_char_pattern","explanation":null},"level":"warning","spans":[{"file_name":"src/problem.rs","byte_start":3956,"byte_end":3959,"line_start":159,"line_end":159,"column_start":27,"column_end":30,"is_primary":true,"text":[{"text":"    if item_list.contains(\",\") {","highlight_start":27,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"try using a `char` instead","code":null,"level":"help","spans":[{"file_name":"src/problem.rs","byte_start":3956,"byte_end":3959,"line_start":159,"line_end":159,"column_start":27,"column_end":30,"is_primary":true,"text":[{"text":"    if item_list.contains(\",\") {","highlight_start":27,"highlight_end":30}],"label":null,"suggested_replacement":"','","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: single-character string constant used as pattern\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/problem.rs:159:27\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m159\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    if item_list.contains(\",\") {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: try using a `char` instead: `','`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern\u001b[0m\n\n"}
{"message":"single-character string constant used as pattern","code":{"code":"clippy::single_char_pattern","explanation":null},"level":"warning","spans":[{"file_name":"src/problem.rs","byte_start":4003,"byte_end":4006,"line_start":161,"line_end":161,"column_start":20,"column_end":23,"is_primary":true,"text":[{"text":"            .split(\",\")","highlight_start":20,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"try using a `char` instead","code":null,"level":"help","spans":[{"file_name":"src/problem.rs","byte_start":4003,"byte_end":4006,"line_start":161,"line_end":161,"column_start":20,"column_end":23,"is_primary":true,"text":[{"text":"            .split(\",\")","highlight_start":20,"highlight_end":23}],"label":null,"suggested_replacement":"','","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: single-character string constant used as pattern\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/problem.rs:161:20\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m161\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .split(\",\")\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: try using a `char` instead: `','`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern\u001b[0m\n\n"}
{"message":"aborting due to 2 previous errors; 23 warnings emitted","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 2 previous errors; 23 warnings emitted\u001b[0m\n\n"}
